#!/usr/bin/env ruby

require "optparse"

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), "/../lib"))

opts = {
  port: 443,
  proto: 'https',
}
OptionParser.new do |o|
  o.banner = "USAGE: #{$PROGRAM_NAME} [options]"
  o.on("-u", "--user [USERNAME]", "Basic Auth username") do |a|
    opts[:user] = a
  end
  o.on("-p", "--pass [PASSWORD]", "Basic Auth password") do |a|
    opts[:pass] = a
  end
  o.on("-H", "--host= [HOST]", "CB Hostname or IP Address") do |a|
    opts[:host] = a
  end
  o.on("--port [PORT]", "Port 80 or 443") do |a|
    opts[:port] = a
  end
  o.on("--proto [PROT]", "http or https") do |a|
    opts[:proto] = a
  end
  o.on("--group-id [ID]", "The Group ID") do |a|
    opts[:group_id] = a
  end
  o.on("--env-id [ID]", "The Environment ID") do |a|
    opts[:env_id] = a
  end
  o.on("--owner-id [ID]", "The Owner ID") do |a|
    opts[:owner_id] = a
  end
  o.on("--osbuild-id [ID]", "The OS Build ID") do |a|
    opts[:osbuild_id] = a
  end
  o.on("--app-ids [1,2]", Array, "The Application ID's") do |a|
    opts[:app_ids] = a
  end
  o.on("--cf [name1=value1,name2=value2]", Array, "The Custom Fields") do |a|
    opts[:params] = a
  end
  o.on("--hostname [HOSTNAME]", "The Server Hostname") do |a|
    opts[:hostname] = a
  end
  o.on("--pc [name1=value1,name2=value2]", Array, "PreConfigurations") do |a|
    opts[:preconfigs] = a
  end
  o.on("--wait", "Wait for completion") do |a|
    opts[:wait] = a
  end
end.parse!

if opts[:user] and opts[:pass]
  require 'cloudbolt'
  build = Cloudbolt.new(opts[:proto], opts[:host], opts[:port], opts[:user], opts[:pass])
  build.cb_prov(opts[:group_id], opts[:env_id], opts[:owner_id], opts[:osbuild_id], opts[:app_ids],
                opts[:params], opts[:hostname], opts[:preconfigs], opts[:wait])
end
